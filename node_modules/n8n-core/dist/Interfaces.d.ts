import type { IPollResponse, ITriggerResponse, IWorkflowSettings as IWorkflowSettingsWorkflow, ValidationResult } from 'n8n-workflow';
export interface IProcessMessage {
    data?: any;
    type: string;
}
export interface IResponseError extends Error {
    statusCode?: number;
}
export interface IWorkflowSettings extends IWorkflowSettingsWorkflow {
    errorWorkflow?: string;
    timezone?: string;
    saveManualRuns?: boolean;
}
export interface IWorkflowData {
    pollResponses?: IPollResponse[];
    triggerResponses?: ITriggerResponse[];
}
export declare namespace n8n {
    interface PackageJson {
        name: string;
        version: string;
        n8n?: {
            credentials?: string[];
            nodes?: string[];
        };
        author?: {
            name?: string;
            email?: string;
        };
    }
}
export type ExtendedValidationResult = Partial<ValidationResult> & {
    fieldName?: string;
};
